{"name":"Baseball-design","tagline":"You may only catch and throw.","body":"The Baseball Design Pattern\r\n===========================\r\n\r\nC++ is known as an expansive, difficult language with many corner cases that trip up beginners and experts alike. The Baseball Design Pattern is a method of reducing the scope of the language, making it easier to learn and reason about.\r\n\r\n\r\nThere is one rule\r\n-----------------\r\n\r\n1. You may not return. _You may only catch and throw_.\r\n\r\n\r\nPraise given to The Baseball Design Pattern\r\n-------------------------------------------\r\n\r\nIt causes immediate reations:\r\n> My eyes... the burning...\r\n\r\nIt provokes emotions:\r\n> Aaaaaah noooo\r\n\r\nIt is found to be useful:\r\n> This approach would be useful when the problem was that your code was running too fast.\r\n\r\nIt is challenging:\r\n> I dare you to use it in a coding interview\r\n\r\nTry The Baseball Design Pattern today! Remember, _you may only catch and throw_.\r\n\r\n\r\nExamples\r\n--------\r\n\r\n### Factorial\r\n\r\n    void factorial(int n, int accum = 1) {\r\n      if (n == 0) throw accum;\r\n      factorial(n - 1, n * accum);\r\n    }\r\n\r\n### More\r\n\r\nA full working example can be found [in the src/ directory](https://github.com/mconbere/baseball-design/tree/master/src).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}